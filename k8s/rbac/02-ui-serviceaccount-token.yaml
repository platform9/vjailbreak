---
# ServiceAccount for UI with proper RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vjailbreak-ui-sa
  namespace: migration-system
  annotations:
    dex.vjailbreak.io/enabled: "true"

---
# Secret to hold the service account token
apiVersion: v1
kind: Secret
metadata:
  name: vjailbreak-ui-sa-token
  namespace: migration-system
  annotations:
    kubernetes.io/service-account.name: vjailbreak-ui-sa
type: kubernetes.io/service-account-token

---
# Role for UI service account to read its own token
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vjailbreak-ui-token-reader
  namespace: migration-system
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["vjailbreak-ui-sa-token"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  resourceNames: ["vjailbreak-ui-sa"]
  verbs: ["get"]

---
# RoleBinding for UI service account
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vjailbreak-ui-token-reader-binding
  namespace: migration-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vjailbreak-ui-token-reader
subjects:
- kind: ServiceAccount
  name: vjailbreak-ui-sa
  namespace: migration-system

---
# ClusterRoleBinding to grant UI SA access to vjailbreak resources
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vjailbreak-ui-manager-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role  # Correct role name (was migration-manager-role)
subjects:
- kind: ServiceAccount
  name: vjailbreak-ui-sa
  namespace: migration-system
