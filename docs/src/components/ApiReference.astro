---
export interface Props {
  versions: string[];
}
const { versions } = Astro.props;
---

<style>
  .version-buttons {
    margin-bottom: 1.5rem;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  .version-btn {
    padding: 0.5rem 1rem;
    border: 1px solid var(--sl-color-gray-5);
    background-color: transparent;
    color: var(--sl-color-text);
    border-radius: 0.25rem;
    cursor: pointer;
    transition: background-color 0.2s, border-color 0.2s;
    width: 90px; 
    text-align: center;
  }
  .version-btn:hover {
    background-color: var(--sl-color-gray-6);
  }
  .version-btn.active {
    background-color: var(--sl-color-accent);
    color: var(--sl-color-text-invert);
    border-color: var(--sl-color-accent);
    font-weight: bold;
  }

  .iframe-container {
    position: relative;
    width: 100%;
    aspect-ratio: 4 / 3;
    border: 1px solid var(--sl-color-gray-5);
    border-radius: 0.25rem;
    overflow: hidden;
  }
  #swagger-iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: none;
  }
</style>

<div class="version-buttons">
  {versions.map(tag => (
    <button class="version-btn" data-src={`/vjailbreak/swagger-ui/${tag}/`}>{tag}</button>
  ))}
</div>
<div class="iframe-container">
  <iframe id="swagger-iframe" title="Swagger API Reference"></iframe>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector('.version-buttons').parentElement;
    const buttons = container.querySelectorAll('.version-btn');
    const iframe = container.querySelector('#swagger-iframe');
    const iframeContainer = container.querySelector('.iframe-container');

    function loadApiVersion(event) {
      buttons.forEach(btn => btn.classList.remove('active'));
      const clickedButton = event.currentTarget;
      clickedButton.classList.add('active');
      const newSrc = clickedButton.getAttribute('data-src');
      if (iframe.src !== newSrc) {
        iframe.src = newSrc;
      }
    }

    buttons.forEach(button => {
      button.addEventListener('click', loadApiVersion);
    });

    if (buttons.length > 0) {
      buttons[0].click();
    } else if (iframeContainer) {
      iframeContainer.innerHTML = '<p>No API versions found.</p>';
    }
  });
</script>