// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.29.3
// source: api.proto

// editor setting.
// Tab size=4; Tabs as spaces; Clean up trailing whitespaces.

package service

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PowerStatus int32

const (
	PowerStatus_POWERED_OFF         PowerStatus = 0
	PowerStatus_POWERED_ON          PowerStatus = 1
	PowerStatus_POWERING_OFF        PowerStatus = 2
	PowerStatus_POWERING_ON         PowerStatus = 3
	PowerStatus_POWER_STATE_UNKNOWN PowerStatus = 99
)

// Enum value maps for PowerStatus.
var (
	PowerStatus_name = map[int32]string{
		0:  "POWERED_OFF",
		1:  "POWERED_ON",
		2:  "POWERING_OFF",
		3:  "POWERING_ON",
		99: "POWER_STATE_UNKNOWN",
	}
	PowerStatus_value = map[string]int32{
		"POWERED_OFF":         0,
		"POWERED_ON":          1,
		"POWERING_OFF":        2,
		"POWERING_ON":         3,
		"POWER_STATE_UNKNOWN": 99,
	}
)

func (x PowerStatus) Enum() *PowerStatus {
	p := new(PowerStatus)
	*p = x
	return p
}

func (x PowerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PowerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (PowerStatus) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x PowerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PowerStatus.Descriptor instead.
func (PowerStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type BootDevice int32

const (
	BootDevice_HDD                 BootDevice = 0
	BootDevice_USB                 BootDevice = 1
	BootDevice_CDROM               BootDevice = 2
	BootDevice_PXE                 BootDevice = 3
	BootDevice_BOOT_DEVICE_UNKNOWN BootDevice = 99
)

// Enum value maps for BootDevice.
var (
	BootDevice_name = map[int32]string{
		0:  "HDD",
		1:  "USB",
		2:  "CDROM",
		3:  "PXE",
		99: "BOOT_DEVICE_UNKNOWN",
	}
	BootDevice_value = map[string]int32{
		"HDD":                 0,
		"USB":                 1,
		"CDROM":               2,
		"PXE":                 3,
		"BOOT_DEVICE_UNKNOWN": 99,
	}
)

func (x BootDevice) Enum() *BootDevice {
	p := new(BootDevice)
	*p = x
	return p
}

func (x BootDevice) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BootDevice) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (BootDevice) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x BootDevice) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BootDevice.Descriptor instead.
func (BootDevice) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

type MachineInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fqdn            string `protobuf:"bytes,2,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Os              string `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	PowerState      string `protobuf:"bytes,4,opt,name=power_state,json=powerState,proto3" json:"power_state,omitempty"`
	Hostname        string `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Architecture    string `protobuf:"bytes,6,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Memory          string `protobuf:"bytes,7,opt,name=memory,proto3" json:"memory,omitempty"`
	CpuCount        string `protobuf:"bytes,8,opt,name=cpu_count,json=cpuCount,proto3" json:"cpu_count,omitempty"`
	CpuSpeed        string `protobuf:"bytes,9,opt,name=cpu_speed,json=cpuSpeed,proto3" json:"cpu_speed,omitempty"`
	BootDiskSize    string `protobuf:"bytes,10,opt,name=boot_disk_size,json=bootDiskSize,proto3" json:"boot_disk_size,omitempty"`
	Status          string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	StatusMessage   string `protobuf:"bytes,12,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	StatusAction    string `protobuf:"bytes,13,opt,name=status_action,json=statusAction,proto3" json:"status_action,omitempty"`
	Description     string `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	Domain          string `protobuf:"bytes,15,opt,name=domain,proto3" json:"domain,omitempty"`
	Zone            string `protobuf:"bytes,16,opt,name=zone,proto3" json:"zone,omitempty"`
	Pool            string `protobuf:"bytes,17,opt,name=pool,proto3" json:"pool,omitempty"`
	TagNames        string `protobuf:"bytes,18,opt,name=tag_names,json=tagNames,proto3" json:"tag_names,omitempty"`
	VmHost          string `protobuf:"bytes,19,opt,name=vm_host,json=vmHost,proto3" json:"vm_host,omitempty"`
	Netboot         bool   `protobuf:"varint,20,opt,name=netboot,proto3" json:"netboot,omitempty"`
	EphemeralDeploy bool   `protobuf:"varint,21,opt,name=ephemeral_deploy,json=ephemeralDeploy,proto3" json:"ephemeral_deploy,omitempty"`
	PowerParams     string `protobuf:"bytes,22,opt,name=power_params,json=powerParams,proto3" json:"power_params,omitempty"`
	PowerType       string `protobuf:"bytes,23,opt,name=power_type,json=powerType,proto3" json:"power_type,omitempty"`
	BiosBootMethod  string `protobuf:"bytes,24,opt,name=bios_boot_method,json=biosBootMethod,proto3" json:"bios_boot_method,omitempty"`
	HardwareUuid    string `protobuf:"bytes,25,opt,name=hardware_uuid,json=hardwareUuid,proto3" json:"hardware_uuid,omitempty"`
	MacAddress      string `protobuf:"bytes,26,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
}

func (x *MachineInfo) Reset() {
	*x = MachineInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineInfo) ProtoMessage() {}

func (x *MachineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineInfo.ProtoReflect.Descriptor instead.
func (*MachineInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *MachineInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MachineInfo) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *MachineInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *MachineInfo) GetPowerState() string {
	if x != nil {
		return x.PowerState
	}
	return ""
}

func (x *MachineInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *MachineInfo) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *MachineInfo) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *MachineInfo) GetCpuCount() string {
	if x != nil {
		return x.CpuCount
	}
	return ""
}

func (x *MachineInfo) GetCpuSpeed() string {
	if x != nil {
		return x.CpuSpeed
	}
	return ""
}

func (x *MachineInfo) GetBootDiskSize() string {
	if x != nil {
		return x.BootDiskSize
	}
	return ""
}

func (x *MachineInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MachineInfo) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *MachineInfo) GetStatusAction() string {
	if x != nil {
		return x.StatusAction
	}
	return ""
}

func (x *MachineInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MachineInfo) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *MachineInfo) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *MachineInfo) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *MachineInfo) GetTagNames() string {
	if x != nil {
		return x.TagNames
	}
	return ""
}

func (x *MachineInfo) GetVmHost() string {
	if x != nil {
		return x.VmHost
	}
	return ""
}

func (x *MachineInfo) GetNetboot() bool {
	if x != nil {
		return x.Netboot
	}
	return false
}

func (x *MachineInfo) GetEphemeralDeploy() bool {
	if x != nil {
		return x.EphemeralDeploy
	}
	return false
}

func (x *MachineInfo) GetPowerParams() string {
	if x != nil {
		return x.PowerParams
	}
	return ""
}

func (x *MachineInfo) GetPowerType() string {
	if x != nil {
		return x.PowerType
	}
	return ""
}

func (x *MachineInfo) GetBiosBootMethod() string {
	if x != nil {
		return x.BiosBootMethod
	}
	return ""
}

func (x *MachineInfo) GetHardwareUuid() string {
	if x != nil {
		return x.HardwareUuid
	}
	return ""
}

func (x *MachineInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

type VersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ReleaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ReleaseNotes string `protobuf:"bytes,2,opt,name=release_notes,json=releaseNotes,proto3" json:"release_notes,omitempty"`
}

func (x *ReleaseInfo) Reset() {
	*x = ReleaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseInfo) ProtoMessage() {}

func (x *ReleaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseInfo.ProtoReflect.Descriptor instead.
func (*ReleaseInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *ReleaseInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ReleaseInfo) GetReleaseNotes() string {
	if x != nil {
		return x.ReleaseNotes
	}
	return ""
}

type AvailableUpdatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*ReleaseInfo `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *AvailableUpdatesResponse) Reset() {
	*x = AvailableUpdatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableUpdatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableUpdatesResponse) ProtoMessage() {}

func (x *AvailableUpdatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableUpdatesResponse.ProtoReflect.Descriptor instead.
func (*AvailableUpdatesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *AvailableUpdatesResponse) GetUpdates() []*ReleaseInfo {
	if x != nil {
		return x.Updates
	}
	return nil
}

type ValidationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentsScaledDown        bool `protobuf:"varint,1,opt,name=agents_scaled_down,json=agentsScaledDown,proto3" json:"agents_scaled_down,omitempty"`
	VmwareCredsDeleted      bool `protobuf:"varint,2,opt,name=vmware_creds_deleted,json=vmwareCredsDeleted,proto3" json:"vmware_creds_deleted,omitempty"`
	OpenstackCredsDeleted   bool `protobuf:"varint,3,opt,name=openstack_creds_deleted,json=openstackCredsDeleted,proto3" json:"openstack_creds_deleted,omitempty"`
	NoMigrationPlans        bool `protobuf:"varint,4,opt,name=no_migration_plans,json=noMigrationPlans,proto3" json:"no_migration_plans,omitempty"`
	NoRollingMigrationPlans bool `protobuf:"varint,5,opt,name=no_rolling_migration_plans,json=noRollingMigrationPlans,proto3" json:"no_rolling_migration_plans,omitempty"`
	NoCustomResources       bool `protobuf:"varint,6,opt,name=no_custom_resources,json=noCustomResources,proto3" json:"no_custom_resources,omitempty"`
	PassedAll               bool `protobuf:"varint,7,opt,name=passed_all,json=passedAll,proto3" json:"passed_all,omitempty"`
}

func (x *ValidationResult) Reset() {
	*x = ValidationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationResult) ProtoMessage() {}

func (x *ValidationResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationResult.ProtoReflect.Descriptor instead.
func (*ValidationResult) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *ValidationResult) GetAgentsScaledDown() bool {
	if x != nil {
		return x.AgentsScaledDown
	}
	return false
}

func (x *ValidationResult) GetVmwareCredsDeleted() bool {
	if x != nil {
		return x.VmwareCredsDeleted
	}
	return false
}

func (x *ValidationResult) GetOpenstackCredsDeleted() bool {
	if x != nil {
		return x.OpenstackCredsDeleted
	}
	return false
}

func (x *ValidationResult) GetNoMigrationPlans() bool {
	if x != nil {
		return x.NoMigrationPlans
	}
	return false
}

func (x *ValidationResult) GetNoRollingMigrationPlans() bool {
	if x != nil {
		return x.NoRollingMigrationPlans
	}
	return false
}

func (x *ValidationResult) GetNoCustomResources() bool {
	if x != nil {
		return x.NoCustomResources
	}
	return false
}

func (x *ValidationResult) GetPassedAll() bool {
	if x != nil {
		return x.PassedAll
	}
	return false
}

type UpgradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetVersion string `protobuf:"bytes,1,opt,name=target_version,json=targetVersion,proto3" json:"target_version,omitempty"`
	AutoCleanup   bool   `protobuf:"varint,2,opt,name=auto_cleanup,json=autoCleanup,proto3" json:"auto_cleanup,omitempty"`
}

func (x *UpgradeRequest) Reset() {
	*x = UpgradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeRequest) ProtoMessage() {}

func (x *UpgradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeRequest.ProtoReflect.Descriptor instead.
func (*UpgradeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *UpgradeRequest) GetTargetVersion() string {
	if x != nil {
		return x.TargetVersion
	}
	return ""
}

func (x *UpgradeRequest) GetAutoCleanup() bool {
	if x != nil {
		return x.AutoCleanup
	}
	return false
}

type UpgradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checks             *ValidationResult `protobuf:"bytes,1,opt,name=checks,proto3" json:"checks,omitempty"`
	UpgradeStarted     bool              `protobuf:"varint,2,opt,name=upgrade_started,json=upgradeStarted,proto3" json:"upgrade_started,omitempty"`
	CleanupRequired    bool              `protobuf:"varint,3,opt,name=cleanup_required,json=cleanupRequired,proto3" json:"cleanup_required,omitempty"`
	CustomResourceList []string          `protobuf:"bytes,4,rep,name=custom_resource_list,json=customResourceList,proto3" json:"custom_resource_list,omitempty"`
}

func (x *UpgradeResponse) Reset() {
	*x = UpgradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeResponse) ProtoMessage() {}

func (x *UpgradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeResponse.ProtoReflect.Descriptor instead.
func (*UpgradeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *UpgradeResponse) GetChecks() *ValidationResult {
	if x != nil {
		return x.Checks
	}
	return nil
}

func (x *UpgradeResponse) GetUpgradeStarted() bool {
	if x != nil {
		return x.UpgradeStarted
	}
	return false
}

func (x *UpgradeResponse) GetCleanupRequired() bool {
	if x != nil {
		return x.CleanupRequired
	}
	return false
}

func (x *UpgradeResponse) GetCustomResourceList() []string {
	if x != nil {
		return x.CustomResourceList
	}
	return nil
}

type UpgradeProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentStep string  `protobuf:"bytes,1,opt,name=current_step,json=currentStep,proto3" json:"current_step,omitempty"`
	Progress    float32 `protobuf:"fixed32,2,opt,name=progress,proto3" json:"progress,omitempty"`
	Status      string  `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Error       string  `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	StartTime   string  `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     string  `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *UpgradeProgressResponse) Reset() {
	*x = UpgradeProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeProgressResponse) ProtoMessage() {}

func (x *UpgradeProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeProgressResponse.ProtoReflect.Descriptor instead.
func (*UpgradeProgressResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *UpgradeProgressResponse) GetCurrentStep() string {
	if x != nil {
		return x.CurrentStep
	}
	return ""
}

func (x *UpgradeProgressResponse) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *UpgradeProgressResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpgradeProgressResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *UpgradeProgressResponse) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UpgradeProgressResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

// VCENTER APIs
type TargetAccessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostnameOrIp string `protobuf:"bytes,1,opt,name=hostname_or_ip,json=hostnameOrIp,proto3" json:"hostname_or_ip,omitempty"`
	Port         string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Datacenter   string `protobuf:"bytes,3,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	Username     string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password     string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	UseInsecure  bool   `protobuf:"varint,6,opt,name=use_insecure,json=useInsecure,proto3" json:"use_insecure,omitempty"`
}

func (x *TargetAccessInfo) Reset() {
	*x = TargetAccessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetAccessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetAccessInfo) ProtoMessage() {}

func (x *TargetAccessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetAccessInfo.ProtoReflect.Descriptor instead.
func (*TargetAccessInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *TargetAccessInfo) GetHostnameOrIp() string {
	if x != nil {
		return x.HostnameOrIp
	}
	return ""
}

func (x *TargetAccessInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *TargetAccessInfo) GetDatacenter() string {
	if x != nil {
		return x.Datacenter
	}
	return ""
}

func (x *TargetAccessInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TargetAccessInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *TargetAccessInfo) GetUseInsecure() bool {
	if x != nil {
		return x.UseInsecure
	}
	return false
}

type Targets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Target:
	//
	//	*Targets_Vcenter
	//	*Targets_Pcd
	//	*Targets_Unknown
	Target isTargets_Target `protobuf_oneof:"target"`
}

func (x *Targets) Reset() {
	*x = Targets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Targets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Targets) ProtoMessage() {}

func (x *Targets) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Targets.ProtoReflect.Descriptor instead.
func (*Targets) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (m *Targets) GetTarget() isTargets_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *Targets) GetVcenter() string {
	if x, ok := x.GetTarget().(*Targets_Vcenter); ok {
		return x.Vcenter
	}
	return ""
}

func (x *Targets) GetPcd() string {
	if x, ok := x.GetTarget().(*Targets_Pcd); ok {
		return x.Pcd
	}
	return ""
}

func (x *Targets) GetUnknown() string {
	if x, ok := x.GetTarget().(*Targets_Unknown); ok {
		return x.Unknown
	}
	return ""
}

type isTargets_Target interface {
	isTargets_Target()
}

type Targets_Vcenter struct {
	Vcenter string `protobuf:"bytes,1,opt,name=vcenter,proto3,oneof"`
}

type Targets_Pcd struct {
	Pcd string `protobuf:"bytes,2,opt,name=pcd,proto3,oneof"`
}

type Targets_Unknown struct {
	Unknown string `protobuf:"bytes,99,opt,name=unknown,proto3,oneof"`
}

func (*Targets_Vcenter) isTargets_Target() {}

func (*Targets_Pcd) isTargets_Target() {}

func (*Targets_Unknown) isTargets_Target() {}

type VMInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GuestOs     string      `protobuf:"bytes,2,opt,name=guest_os,json=guestOs,proto3" json:"guest_os,omitempty"`
	PowerStatus PowerStatus `protobuf:"varint,3,opt,name=power_status,json=powerStatus,proto3,enum=api.PowerStatus" json:"power_status,omitempty"`
	Cpu         int64       `protobuf:"varint,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory      int64       `protobuf:"varint,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Ipv4Addr    string      `protobuf:"bytes,6,opt,name=ipv4_addr,json=ipv4Addr,proto3" json:"ipv4_addr,omitempty"`
	Ipv6Addr    string      `protobuf:"bytes,7,opt,name=ipv6_addr,json=ipv6Addr,proto3" json:"ipv6_addr,omitempty"`
	BootDevice  BootDevice  `protobuf:"varint,8,opt,name=boot_device,json=bootDevice,proto3,enum=api.BootDevice" json:"boot_device,omitempty"`
}

func (x *VMInfo) Reset() {
	*x = VMInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VMInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMInfo) ProtoMessage() {}

func (x *VMInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMInfo.ProtoReflect.Descriptor instead.
func (*VMInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *VMInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VMInfo) GetGuestOs() string {
	if x != nil {
		return x.GuestOs
	}
	return ""
}

func (x *VMInfo) GetPowerStatus() PowerStatus {
	if x != nil {
		return x.PowerStatus
	}
	return PowerStatus_POWERED_OFF
}

func (x *VMInfo) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *VMInfo) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *VMInfo) GetIpv4Addr() string {
	if x != nil {
		return x.Ipv4Addr
	}
	return ""
}

func (x *VMInfo) GetIpv6Addr() string {
	if x != nil {
		return x.Ipv6Addr
	}
	return ""
}

func (x *VMInfo) GetBootDevice() BootDevice {
	if x != nil {
		return x.BootDevice
	}
	return BootDevice_HDD
}

type ListHostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *TargetAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	Target     *Targets          `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *ListHostsRequest) Reset() {
	*x = ListHostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostsRequest) ProtoMessage() {}

func (x *ListHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostsRequest.ProtoReflect.Descriptor instead.
func (*ListHostsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *ListHostsRequest) GetAccessInfo() *TargetAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *ListHostsRequest) GetTarget() *Targets {
	if x != nil {
		return x.Target
	}
	return nil
}

type ListHostsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts []*ListHostsResponseItem `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
}

func (x *ListHostsResponse) Reset() {
	*x = ListHostsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostsResponse) ProtoMessage() {}

func (x *ListHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostsResponse.ProtoReflect.Descriptor instead.
func (*ListHostsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *ListHostsResponse) GetHosts() []*ListHostsResponseItem {
	if x != nil {
		return x.Hosts
	}
	return nil
}

type ListHostsResponseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Ip         string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	MacAddress []string `protobuf:"bytes,3,rep,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	BiosUuid   string   `protobuf:"bytes,4,opt,name=bios_uuid,json=biosUuid,proto3" json:"bios_uuid,omitempty"`
	Serial     string   `protobuf:"bytes,5,opt,name=serial,proto3" json:"serial,omitempty"`
}

func (x *ListHostsResponseItem) Reset() {
	*x = ListHostsResponseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHostsResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostsResponseItem) ProtoMessage() {}

func (x *ListHostsResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostsResponseItem.ProtoReflect.Descriptor instead.
func (*ListHostsResponseItem) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *ListHostsResponseItem) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ListHostsResponseItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ListHostsResponseItem) GetMacAddress() []string {
	if x != nil {
		return x.MacAddress
	}
	return nil
}

func (x *ListHostsResponseItem) GetBiosUuid() string {
	if x != nil {
		return x.BiosUuid
	}
	return ""
}

func (x *ListHostsResponseItem) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

type UnCordonHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *TargetAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	Target     *Targets          `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	EsxiName   string            `protobuf:"bytes,3,opt,name=esxi_name,json=esxiName,proto3" json:"esxi_name,omitempty"`
}

func (x *UnCordonHostRequest) Reset() {
	*x = UnCordonHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnCordonHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnCordonHostRequest) ProtoMessage() {}

func (x *UnCordonHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnCordonHostRequest.ProtoReflect.Descriptor instead.
func (*UnCordonHostRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *UnCordonHostRequest) GetAccessInfo() *TargetAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *UnCordonHostRequest) GetTarget() *Targets {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *UnCordonHostRequest) GetEsxiName() string {
	if x != nil {
		return x.EsxiName
	}
	return ""
}

type UnCordonHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UnCordonHostResponse) Reset() {
	*x = UnCordonHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnCordonHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnCordonHostResponse) ProtoMessage() {}

func (x *UnCordonHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnCordonHostResponse.ProtoReflect.Descriptor instead.
func (*UnCordonHostResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *UnCordonHostResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnCordonHostResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListVMsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *TargetAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	Target     *Targets          `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *ListVMsRequest) Reset() {
	*x = ListVMsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVMsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMsRequest) ProtoMessage() {}

func (x *ListVMsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMsRequest.ProtoReflect.Descriptor instead.
func (*ListVMsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (x *ListVMsRequest) GetAccessInfo() *TargetAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *ListVMsRequest) GetTarget() *Targets {
	if x != nil {
		return x.Target
	}
	return nil
}

type ListVMsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vms []*VMInfo `protobuf:"bytes,1,rep,name=vms,proto3" json:"vms,omitempty"`
}

func (x *ListVMsResponse) Reset() {
	*x = ListVMsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVMsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMsResponse) ProtoMessage() {}

func (x *ListVMsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMsResponse.ProtoReflect.Descriptor instead.
func (*ListVMsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *ListVMsResponse) GetVms() []*VMInfo {
	if x != nil {
		return x.Vms
	}
	return nil
}

type GetVMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *TargetAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	Target     *Targets          `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Name       string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetVMRequest) Reset() {
	*x = GetVMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMRequest) ProtoMessage() {}

func (x *GetVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMRequest.ProtoReflect.Descriptor instead.
func (*GetVMRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *GetVMRequest) GetAccessInfo() *TargetAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *GetVMRequest) GetTarget() *Targets {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *GetVMRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetVMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vm *VMInfo `protobuf:"bytes,1,opt,name=vm,proto3" json:"vm,omitempty"`
}

func (x *GetVMResponse) Reset() {
	*x = GetVMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMResponse) ProtoMessage() {}

func (x *GetVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMResponse.ProtoReflect.Descriptor instead.
func (*GetVMResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *GetVMResponse) GetVm() *VMInfo {
	if x != nil {
		return x.Vm
	}
	return nil
}

type ReclaimVMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *TargetAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	Target     *Targets          `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Name       string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Args       []string          `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *ReclaimVMRequest) Reset() {
	*x = ReclaimVMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReclaimVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReclaimVMRequest) ProtoMessage() {}

func (x *ReclaimVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReclaimVMRequest.ProtoReflect.Descriptor instead.
func (*ReclaimVMRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (x *ReclaimVMRequest) GetAccessInfo() *TargetAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *ReclaimVMRequest) GetTarget() *Targets {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ReclaimVMRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReclaimVMRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type ReclaimVMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReclaimVMResponse) Reset() {
	*x = ReclaimVMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReclaimVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReclaimVMResponse) ProtoMessage() {}

func (x *ReclaimVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReclaimVMResponse.ProtoReflect.Descriptor instead.
func (*ReclaimVMResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22}
}

func (x *ReclaimVMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReclaimVMResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CordonHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *TargetAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	Target     *Targets          `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	EsxiName   string            `protobuf:"bytes,3,opt,name=esxi_name,json=esxiName,proto3" json:"esxi_name,omitempty"`
}

func (x *CordonHostRequest) Reset() {
	*x = CordonHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CordonHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CordonHostRequest) ProtoMessage() {}

func (x *CordonHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CordonHostRequest.ProtoReflect.Descriptor instead.
func (*CordonHostRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23}
}

func (x *CordonHostRequest) GetAccessInfo() *TargetAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *CordonHostRequest) GetTarget() *Targets {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *CordonHostRequest) GetEsxiName() string {
	if x != nil {
		return x.EsxiName
	}
	return ""
}

type CordonHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CordonHostResponse) Reset() {
	*x = CordonHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CordonHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CordonHostResponse) ProtoMessage() {}

func (x *CordonHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CordonHostResponse.ProtoReflect.Descriptor instead.
func (*CordonHostResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24}
}

func (x *CordonHostResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CordonHostResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// BM Provisioner APIs
type BMProvisionerAccessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey      string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	BaseUrl     string `protobuf:"bytes,2,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	UseInsecure bool   `protobuf:"varint,3,opt,name=use_insecure,json=useInsecure,proto3" json:"use_insecure,omitempty"`
	Username    string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password    string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	// Types that are assignable to Providers:
	//
	//	*BMProvisionerAccessInfo_Maas
	//	*BMProvisionerAccessInfo_UnknownProvider
	Providers isBMProvisionerAccessInfo_Providers `protobuf_oneof:"providers"`
}

func (x *BMProvisionerAccessInfo) Reset() {
	*x = BMProvisionerAccessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BMProvisionerAccessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BMProvisionerAccessInfo) ProtoMessage() {}

func (x *BMProvisionerAccessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BMProvisionerAccessInfo.ProtoReflect.Descriptor instead.
func (*BMProvisionerAccessInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25}
}

func (x *BMProvisionerAccessInfo) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *BMProvisionerAccessInfo) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *BMProvisionerAccessInfo) GetUseInsecure() bool {
	if x != nil {
		return x.UseInsecure
	}
	return false
}

func (x *BMProvisionerAccessInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BMProvisionerAccessInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (m *BMProvisionerAccessInfo) GetProviders() isBMProvisionerAccessInfo_Providers {
	if m != nil {
		return m.Providers
	}
	return nil
}

func (x *BMProvisionerAccessInfo) GetMaas() string {
	if x, ok := x.GetProviders().(*BMProvisionerAccessInfo_Maas); ok {
		return x.Maas
	}
	return ""
}

func (x *BMProvisionerAccessInfo) GetUnknownProvider() string {
	if x, ok := x.GetProviders().(*BMProvisionerAccessInfo_UnknownProvider); ok {
		return x.UnknownProvider
	}
	return ""
}

type isBMProvisionerAccessInfo_Providers interface {
	isBMProvisionerAccessInfo_Providers()
}

type BMProvisionerAccessInfo_Maas struct {
	Maas string `protobuf:"bytes,6,opt,name=maas,proto3,oneof"`
}

type BMProvisionerAccessInfo_UnknownProvider struct {
	UnknownProvider string `protobuf:"bytes,99,opt,name=unknown_provider,json=unknownProvider,proto3,oneof"`
}

func (*BMProvisionerAccessInfo_Maas) isBMProvisionerAccessInfo_Providers() {}

func (*BMProvisionerAccessInfo_UnknownProvider) isBMProvisionerAccessInfo_Providers() {}

type BaseBMGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *BaseBMGetRequest) Reset() {
	*x = BaseBMGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseBMGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseBMGetRequest) ProtoMessage() {}

func (x *BaseBMGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseBMGetRequest.ProtoReflect.Descriptor instead.
func (*BaseBMGetRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{26}
}

func (x *BaseBMGetRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type BMListMachinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *BMProvisionerAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
}

func (x *BMListMachinesRequest) Reset() {
	*x = BMListMachinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BMListMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BMListMachinesRequest) ProtoMessage() {}

func (x *BMListMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BMListMachinesRequest.ProtoReflect.Descriptor instead.
func (*BMListMachinesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27}
}

func (x *BMListMachinesRequest) GetAccessInfo() *BMProvisionerAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

type BMListMachinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machines []*MachineInfo `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *BMListMachinesResponse) Reset() {
	*x = BMListMachinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BMListMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BMListMachinesResponse) ProtoMessage() {}

func (x *BMListMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BMListMachinesResponse.ProtoReflect.Descriptor instead.
func (*BMListMachinesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{28}
}

func (x *BMListMachinesResponse) GetMachines() []*MachineInfo {
	if x != nil {
		return x.Machines
	}
	return nil
}

type GetResourceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *BMProvisionerAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	ResourceId string                   `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *GetResourceInfoRequest) Reset() {
	*x = GetResourceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceInfoRequest) ProtoMessage() {}

func (x *GetResourceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceInfoRequest.ProtoReflect.Descriptor instead.
func (*GetResourceInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29}
}

func (x *GetResourceInfoRequest) GetAccessInfo() *BMProvisionerAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *GetResourceInfoRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type GetResourceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *MachineInfo `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *GetResourceInfoResponse) Reset() {
	*x = GetResourceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceInfoResponse) ProtoMessage() {}

func (x *GetResourceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceInfoResponse.ProtoReflect.Descriptor instead.
func (*GetResourceInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{30}
}

func (x *GetResourceInfoResponse) GetMachine() *MachineInfo {
	if x != nil {
		return x.Machine
	}
	return nil
}

type SetResourcePowerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo  *BMProvisionerAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	ResourceId  string                   `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	PowerStatus PowerStatus              `protobuf:"varint,3,opt,name=power_status,json=powerStatus,proto3,enum=api.PowerStatus" json:"power_status,omitempty"`
}

func (x *SetResourcePowerRequest) Reset() {
	*x = SetResourcePowerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetResourcePowerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetResourcePowerRequest) ProtoMessage() {}

func (x *SetResourcePowerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetResourcePowerRequest.ProtoReflect.Descriptor instead.
func (*SetResourcePowerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31}
}

func (x *SetResourcePowerRequest) GetAccessInfo() *BMProvisionerAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *SetResourcePowerRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *SetResourcePowerRequest) GetPowerStatus() PowerStatus {
	if x != nil {
		return x.PowerStatus
	}
	return PowerStatus_POWERED_OFF
}

type SetResourcePowerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SetResourcePowerResponse) Reset() {
	*x = SetResourcePowerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetResourcePowerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetResourcePowerResponse) ProtoMessage() {}

func (x *SetResourcePowerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetResourcePowerResponse.ProtoReflect.Descriptor instead.
func (*SetResourcePowerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{32}
}

func (x *SetResourcePowerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetResourcePowerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SetResourceBM2PXEBootRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *BMProvisionerAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	ResourceId string                   `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	PowerCycle bool                     `protobuf:"varint,3,opt,name=power_cycle,json=powerCycle,proto3" json:"power_cycle,omitempty"`
	// Types that are assignable to IpmiInterface:
	//
	//	*SetResourceBM2PXEBootRequest_Lan
	//	*SetResourceBM2PXEBootRequest_Lanplus
	//	*SetResourceBM2PXEBootRequest_OpenIpmi
	//	*SetResourceBM2PXEBootRequest_Tool
	IpmiInterface isSetResourceBM2PXEBootRequest_IpmiInterface `protobuf_oneof:"ipmi_interface"`
}

func (x *SetResourceBM2PXEBootRequest) Reset() {
	*x = SetResourceBM2PXEBootRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetResourceBM2PXEBootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetResourceBM2PXEBootRequest) ProtoMessage() {}

func (x *SetResourceBM2PXEBootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetResourceBM2PXEBootRequest.ProtoReflect.Descriptor instead.
func (*SetResourceBM2PXEBootRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{33}
}

func (x *SetResourceBM2PXEBootRequest) GetAccessInfo() *BMProvisionerAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *SetResourceBM2PXEBootRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *SetResourceBM2PXEBootRequest) GetPowerCycle() bool {
	if x != nil {
		return x.PowerCycle
	}
	return false
}

func (m *SetResourceBM2PXEBootRequest) GetIpmiInterface() isSetResourceBM2PXEBootRequest_IpmiInterface {
	if m != nil {
		return m.IpmiInterface
	}
	return nil
}

func (x *SetResourceBM2PXEBootRequest) GetLan() string {
	if x, ok := x.GetIpmiInterface().(*SetResourceBM2PXEBootRequest_Lan); ok {
		return x.Lan
	}
	return ""
}

func (x *SetResourceBM2PXEBootRequest) GetLanplus() string {
	if x, ok := x.GetIpmiInterface().(*SetResourceBM2PXEBootRequest_Lanplus); ok {
		return x.Lanplus
	}
	return ""
}

func (x *SetResourceBM2PXEBootRequest) GetOpenIpmi() string {
	if x, ok := x.GetIpmiInterface().(*SetResourceBM2PXEBootRequest_OpenIpmi); ok {
		return x.OpenIpmi
	}
	return ""
}

func (x *SetResourceBM2PXEBootRequest) GetTool() string {
	if x, ok := x.GetIpmiInterface().(*SetResourceBM2PXEBootRequest_Tool); ok {
		return x.Tool
	}
	return ""
}

type isSetResourceBM2PXEBootRequest_IpmiInterface interface {
	isSetResourceBM2PXEBootRequest_IpmiInterface()
}

type SetResourceBM2PXEBootRequest_Lan struct {
	Lan string `protobuf:"bytes,4,opt,name=lan,proto3,oneof"`
}

type SetResourceBM2PXEBootRequest_Lanplus struct {
	Lanplus string `protobuf:"bytes,5,opt,name=lanplus,proto3,oneof"`
}

type SetResourceBM2PXEBootRequest_OpenIpmi struct {
	OpenIpmi string `protobuf:"bytes,6,opt,name=open_ipmi,json=openIpmi,proto3,oneof"`
}

type SetResourceBM2PXEBootRequest_Tool struct {
	Tool string `protobuf:"bytes,7,opt,name=tool,proto3,oneof"`
}

func (*SetResourceBM2PXEBootRequest_Lan) isSetResourceBM2PXEBootRequest_IpmiInterface() {}

func (*SetResourceBM2PXEBootRequest_Lanplus) isSetResourceBM2PXEBootRequest_IpmiInterface() {}

func (*SetResourceBM2PXEBootRequest_OpenIpmi) isSetResourceBM2PXEBootRequest_IpmiInterface() {}

func (*SetResourceBM2PXEBootRequest_Tool) isSetResourceBM2PXEBootRequest_IpmiInterface() {}

type SetResourceBM2PXEBootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SetResourceBM2PXEBootResponse) Reset() {
	*x = SetResourceBM2PXEBootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetResourceBM2PXEBootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetResourceBM2PXEBootResponse) ProtoMessage() {}

func (x *SetResourceBM2PXEBootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetResourceBM2PXEBootResponse.ProtoReflect.Descriptor instead.
func (*SetResourceBM2PXEBootResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{34}
}

func (x *SetResourceBM2PXEBootResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetResourceBM2PXEBootResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WhoAmIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WhoAmIRequest) Reset() {
	*x = WhoAmIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoAmIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAmIRequest) ProtoMessage() {}

func (x *WhoAmIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAmIRequest.ProtoReflect.Descriptor instead.
func (*WhoAmIRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35}
}

type WhoAmIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderName string `protobuf:"bytes,1,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
}

func (x *WhoAmIResponse) Reset() {
	*x = WhoAmIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoAmIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAmIResponse) ProtoMessage() {}

func (x *WhoAmIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAmIResponse.ProtoReflect.Descriptor instead.
func (*WhoAmIResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{36}
}

func (x *WhoAmIResponse) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

type BootsourceSelections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OS           string   `protobuf:"bytes,1,opt,name=OS,proto3" json:"OS,omitempty"`
	Release      string   `protobuf:"bytes,2,opt,name=Release,proto3" json:"Release,omitempty"`
	ResourceURI  string   `protobuf:"bytes,3,opt,name=ResourceURI,proto3" json:"ResourceURI,omitempty"`
	Arches       []string `protobuf:"bytes,4,rep,name=Arches,proto3" json:"Arches,omitempty"`
	Subarches    []string `protobuf:"bytes,5,rep,name=Subarches,proto3" json:"Subarches,omitempty"`
	Labels       []string `protobuf:"bytes,6,rep,name=Labels,proto3" json:"Labels,omitempty"`
	ID           int32    `protobuf:"varint,7,opt,name=ID,proto3" json:"ID,omitempty"`
	BootSourceID int32    `protobuf:"varint,8,opt,name=BootSourceID,proto3" json:"BootSourceID,omitempty"`
}

func (x *BootsourceSelections) Reset() {
	*x = BootsourceSelections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootsourceSelections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootsourceSelections) ProtoMessage() {}

func (x *BootsourceSelections) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootsourceSelections.ProtoReflect.Descriptor instead.
func (*BootsourceSelections) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{37}
}

func (x *BootsourceSelections) GetOS() string {
	if x != nil {
		return x.OS
	}
	return ""
}

func (x *BootsourceSelections) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *BootsourceSelections) GetResourceURI() string {
	if x != nil {
		return x.ResourceURI
	}
	return ""
}

func (x *BootsourceSelections) GetArches() []string {
	if x != nil {
		return x.Arches
	}
	return nil
}

func (x *BootsourceSelections) GetSubarches() []string {
	if x != nil {
		return x.Subarches
	}
	return nil
}

func (x *BootsourceSelections) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *BootsourceSelections) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *BootsourceSelections) GetBootSourceID() int32 {
	if x != nil {
		return x.BootSourceID
	}
	return 0
}

type ListBootSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *BMProvisionerAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
}

func (x *ListBootSourceRequest) Reset() {
	*x = ListBootSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBootSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBootSourceRequest) ProtoMessage() {}

func (x *ListBootSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBootSourceRequest.ProtoReflect.Descriptor instead.
func (*ListBootSourceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{38}
}

func (x *ListBootSourceRequest) GetAccessInfo() *BMProvisionerAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

type ListBootSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BootSourceSelections []*BootsourceSelections `protobuf:"bytes,1,rep,name=boot_source_selections,json=bootSourceSelections,proto3" json:"boot_source_selections,omitempty"`
}

func (x *ListBootSourceResponse) Reset() {
	*x = ListBootSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBootSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBootSourceResponse) ProtoMessage() {}

func (x *ListBootSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBootSourceResponse.ProtoReflect.Descriptor instead.
func (*ListBootSourceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{39}
}

func (x *ListBootSourceResponse) GetBootSourceSelections() []*BootsourceSelections {
	if x != nil {
		return x.BootSourceSelections
	}
	return nil
}

type IpmiType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to IpmiInterface:
	//
	//	*IpmiType_Lan
	//	*IpmiType_Lanplus
	//	*IpmiType_OpenIpmi
	//	*IpmiType_Tool
	IpmiInterface isIpmiType_IpmiInterface `protobuf_oneof:"ipmi_interface"`
}

func (x *IpmiType) Reset() {
	*x = IpmiType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpmiType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpmiType) ProtoMessage() {}

func (x *IpmiType) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpmiType.ProtoReflect.Descriptor instead.
func (*IpmiType) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{40}
}

func (m *IpmiType) GetIpmiInterface() isIpmiType_IpmiInterface {
	if m != nil {
		return m.IpmiInterface
	}
	return nil
}

func (x *IpmiType) GetLan() string {
	if x, ok := x.GetIpmiInterface().(*IpmiType_Lan); ok {
		return x.Lan
	}
	return ""
}

func (x *IpmiType) GetLanplus() string {
	if x, ok := x.GetIpmiInterface().(*IpmiType_Lanplus); ok {
		return x.Lanplus
	}
	return ""
}

func (x *IpmiType) GetOpenIpmi() string {
	if x, ok := x.GetIpmiInterface().(*IpmiType_OpenIpmi); ok {
		return x.OpenIpmi
	}
	return ""
}

func (x *IpmiType) GetTool() string {
	if x, ok := x.GetIpmiInterface().(*IpmiType_Tool); ok {
		return x.Tool
	}
	return ""
}

type isIpmiType_IpmiInterface interface {
	isIpmiType_IpmiInterface()
}

type IpmiType_Lan struct {
	Lan string `protobuf:"bytes,1,opt,name=lan,proto3,oneof"`
}

type IpmiType_Lanplus struct {
	Lanplus string `protobuf:"bytes,2,opt,name=lanplus,proto3,oneof"`
}

type IpmiType_OpenIpmi struct {
	OpenIpmi string `protobuf:"bytes,3,opt,name=open_ipmi,json=openIpmi,proto3,oneof"`
}

type IpmiType_Tool struct {
	Tool string `protobuf:"bytes,4,opt,name=tool,proto3,oneof"`
}

func (*IpmiType_Lan) isIpmiType_IpmiInterface() {}

func (*IpmiType_Lanplus) isIpmiType_IpmiInterface() {}

func (*IpmiType_OpenIpmi) isIpmiType_IpmiInterface() {}

func (*IpmiType_Tool) isIpmiType_IpmiInterface() {}

type ReclaimBMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo         *BMProvisionerAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	ResourceId         string                   `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	UserData           string                   `protobuf:"bytes,3,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	EraseDisk          bool                     `protobuf:"varint,4,opt,name=erase_disk,json=eraseDisk,proto3" json:"erase_disk,omitempty"`
	BootSource         *BootsourceSelections    `protobuf:"bytes,5,opt,name=boot_source,json=bootSource,proto3" json:"boot_source,omitempty"`
	PowerCycle         bool                     `protobuf:"varint,6,opt,name=power_cycle,json=powerCycle,proto3" json:"power_cycle,omitempty"`
	ManualPowerControl bool                     `protobuf:"varint,7,opt,name=manual_power_control,json=manualPowerControl,proto3" json:"manual_power_control,omitempty"`
	IpmiInterface      *IpmiType                `protobuf:"bytes,8,opt,name=ipmi_interface,json=ipmiInterface,proto3" json:"ipmi_interface,omitempty"`
}

func (x *ReclaimBMRequest) Reset() {
	*x = ReclaimBMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReclaimBMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReclaimBMRequest) ProtoMessage() {}

func (x *ReclaimBMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReclaimBMRequest.ProtoReflect.Descriptor instead.
func (*ReclaimBMRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{41}
}

func (x *ReclaimBMRequest) GetAccessInfo() *BMProvisionerAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *ReclaimBMRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ReclaimBMRequest) GetUserData() string {
	if x != nil {
		return x.UserData
	}
	return ""
}

func (x *ReclaimBMRequest) GetEraseDisk() bool {
	if x != nil {
		return x.EraseDisk
	}
	return false
}

func (x *ReclaimBMRequest) GetBootSource() *BootsourceSelections {
	if x != nil {
		return x.BootSource
	}
	return nil
}

func (x *ReclaimBMRequest) GetPowerCycle() bool {
	if x != nil {
		return x.PowerCycle
	}
	return false
}

func (x *ReclaimBMRequest) GetManualPowerControl() bool {
	if x != nil {
		return x.ManualPowerControl
	}
	return false
}

func (x *ReclaimBMRequest) GetIpmiInterface() *IpmiType {
	if x != nil {
		return x.IpmiInterface
	}
	return nil
}

type ReclaimBMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReclaimBMResponse) Reset() {
	*x = ReclaimBMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReclaimBMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReclaimBMResponse) ProtoMessage() {}

func (x *ReclaimBMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReclaimBMResponse.ProtoReflect.Descriptor instead.
func (*ReclaimBMResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{42}
}

func (x *ReclaimBMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReclaimBMResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeployMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo    *BMProvisionerAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	ResourceId    string                   `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	UserData      string                   `protobuf:"bytes,3,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	OsReleaseName string                   `protobuf:"bytes,4,opt,name=os_release_name,json=osReleaseName,proto3" json:"os_release_name,omitempty"`
}

func (x *DeployMachineRequest) Reset() {
	*x = DeployMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployMachineRequest) ProtoMessage() {}

func (x *DeployMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployMachineRequest.ProtoReflect.Descriptor instead.
func (*DeployMachineRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{43}
}

func (x *DeployMachineRequest) GetAccessInfo() *BMProvisionerAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *DeployMachineRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *DeployMachineRequest) GetUserData() string {
	if x != nil {
		return x.UserData
	}
	return ""
}

func (x *DeployMachineRequest) GetOsReleaseName() string {
	if x != nil {
		return x.OsReleaseName
	}
	return ""
}

type DeployMachineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeployMachineResponse) Reset() {
	*x = DeployMachineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployMachineResponse) ProtoMessage() {}

func (x *DeployMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployMachineResponse.ProtoReflect.Descriptor instead.
func (*DeployMachineResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{44}
}

func (x *DeployMachineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeployMachineResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StartBMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo    *BMProvisionerAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	ResourceId    string                   `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	IpmiInterface *IpmiType                `protobuf:"bytes,3,opt,name=ipmi_interface,json=ipmiInterface,proto3" json:"ipmi_interface,omitempty"`
}

func (x *StartBMRequest) Reset() {
	*x = StartBMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBMRequest) ProtoMessage() {}

func (x *StartBMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBMRequest.ProtoReflect.Descriptor instead.
func (*StartBMRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{45}
}

func (x *StartBMRequest) GetAccessInfo() *BMProvisionerAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *StartBMRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *StartBMRequest) GetIpmiInterface() *IpmiType {
	if x != nil {
		return x.IpmiInterface
	}
	return nil
}

type StartBMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StartBMResponse) Reset() {
	*x = StartBMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBMResponse) ProtoMessage() {}

func (x *StartBMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBMResponse.ProtoReflect.Descriptor instead.
func (*StartBMResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{46}
}

func (x *StartBMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartBMResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopBMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo    *BMProvisionerAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	ResourceId    string                   `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	IpmiInterface *IpmiType                `protobuf:"bytes,3,opt,name=ipmi_interface,json=ipmiInterface,proto3" json:"ipmi_interface,omitempty"`
}

func (x *StopBMRequest) Reset() {
	*x = StopBMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBMRequest) ProtoMessage() {}

func (x *StopBMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBMRequest.ProtoReflect.Descriptor instead.
func (*StopBMRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{47}
}

func (x *StopBMRequest) GetAccessInfo() *BMProvisionerAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *StopBMRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *StopBMRequest) GetIpmiInterface() *IpmiType {
	if x != nil {
		return x.IpmiInterface
	}
	return nil
}

type StopBMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StopBMResponse) Reset() {
	*x = StopBMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBMResponse) ProtoMessage() {}

func (x *StopBMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBMResponse.ProtoReflect.Descriptor instead.
func (*StopBMResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{48}
}

func (x *StopBMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopBMResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type IsBMReadyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *BMProvisionerAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	ResourceId string                   `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *IsBMReadyRequest) Reset() {
	*x = IsBMReadyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBMReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBMReadyRequest) ProtoMessage() {}

func (x *IsBMReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBMReadyRequest.ProtoReflect.Descriptor instead.
func (*IsBMReadyRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{49}
}

func (x *IsBMReadyRequest) GetAccessInfo() *BMProvisionerAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *IsBMReadyRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type IsBMReadyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReady bool `protobuf:"varint,1,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
}

func (x *IsBMReadyResponse) Reset() {
	*x = IsBMReadyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBMReadyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBMReadyResponse) ProtoMessage() {}

func (x *IsBMReadyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBMReadyResponse.ProtoReflect.Descriptor instead.
func (*IsBMReadyResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{50}
}

func (x *IsBMReadyResponse) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type IsBMRunningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInfo *BMProvisionerAccessInfo `protobuf:"bytes,1,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
	ResourceId string                   `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *IsBMRunningRequest) Reset() {
	*x = IsBMRunningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBMRunningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBMRunningRequest) ProtoMessage() {}

func (x *IsBMRunningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBMRunningRequest.ProtoReflect.Descriptor instead.
func (*IsBMRunningRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{51}
}

func (x *IsBMRunningRequest) GetAccessInfo() *BMProvisionerAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

func (x *IsBMRunningRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type IsBMRunningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRunning bool `protobuf:"varint,1,opt,name=is_running,json=isRunning,proto3" json:"is_running,omitempty"`
}

func (x *IsBMRunningResponse) Reset() {
	*x = IsBMRunningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBMRunningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBMRunningResponse) ProtoMessage() {}

func (x *IsBMRunningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBMRunningResponse.ProtoReflect.Descriptor instead.
func (*IsBMRunningResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{52}
}

func (x *IsBMRunningResponse) GetIsRunning() bool {
	if x != nil {
		return x.IsRunning
	}
	return false
}

type OpenstackAccessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthUrl    string `protobuf:"bytes,1,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	DomainName string `protobuf:"bytes,2,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	Insecure   bool   `protobuf:"varint,3,opt,name=insecure,proto3" json:"insecure,omitempty"`
	Password   string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	RegionName string `protobuf:"bytes,5,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	TenantName string `protobuf:"bytes,6,opt,name=tenant_name,json=tenantName,proto3" json:"tenant_name,omitempty"`
	Username   string `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *OpenstackAccessInfo) Reset() {
	*x = OpenstackAccessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenstackAccessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenstackAccessInfo) ProtoMessage() {}

func (x *OpenstackAccessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenstackAccessInfo.ProtoReflect.Descriptor instead.
func (*OpenstackAccessInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{53}
}

func (x *OpenstackAccessInfo) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *OpenstackAccessInfo) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *OpenstackAccessInfo) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *OpenstackAccessInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *OpenstackAccessInfo) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *OpenstackAccessInfo) GetTenantName() string {
	if x != nil {
		return x.TenantName
	}
	return ""
}

func (x *OpenstackAccessInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ValidateOpenstackIpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip         []string             `protobuf:"bytes,1,rep,name=ip,proto3" json:"ip,omitempty"`
	AccessInfo *OpenstackAccessInfo `protobuf:"bytes,2,opt,name=access_info,json=accessInfo,proto3" json:"access_info,omitempty"`
}

func (x *ValidateOpenstackIpRequest) Reset() {
	*x = ValidateOpenstackIpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateOpenstackIpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateOpenstackIpRequest) ProtoMessage() {}

func (x *ValidateOpenstackIpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateOpenstackIpRequest.ProtoReflect.Descriptor instead.
func (*ValidateOpenstackIpRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{54}
}

func (x *ValidateOpenstackIpRequest) GetIp() []string {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *ValidateOpenstackIpRequest) GetAccessInfo() *OpenstackAccessInfo {
	if x != nil {
		return x.AccessInfo
	}
	return nil
}

type ValidateOpenstackIpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid []bool   `protobuf:"varint,1,rep,packed,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Reason  []string `protobuf:"bytes,2,rep,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ValidateOpenstackIpResponse) Reset() {
	*x = ValidateOpenstackIpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateOpenstackIpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateOpenstackIpResponse) ProtoMessage() {}

func (x *ValidateOpenstackIpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateOpenstackIpResponse.ProtoReflect.Descriptor instead.
func (*ValidateOpenstackIpResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{55}
}

func (x *ValidateOpenstackIpResponse) GetIsValid() []bool {
	if x != nil {
		return x.IsValid
	}
	return nil
}

func (x *ValidateOpenstackIpResponse) GetReason() []string {
	if x != nil {
		return x.Reason
	}
	return nil
}

type CleanupStepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step string `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *CleanupStepRequest) Reset() {
	*x = CleanupStepRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanupStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupStepRequest) ProtoMessage() {}

func (x *CleanupStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupStepRequest.ProtoReflect.Descriptor instead.
func (*CleanupStepRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{56}
}

func (x *CleanupStepRequest) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

type CleanupStepResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step    string `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CleanupStepResponse) Reset() {
	*x = CleanupStepResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanupStepResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupStepResponse) ProtoMessage() {}

func (x *CleanupStepResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupStepResponse.ProtoReflect.Descriptor instead.
func (*CleanupStepResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{57}
}

func (x *CleanupStepResponse) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *CleanupStepResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CleanupStepResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d,
	0x06, 0x0a, 0x0b, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71,
	0x64, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x70, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x70, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x70, 0x75,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69,
	0x73, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x6f, 0x6f, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6f,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x76, 0x6d, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x6d, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x62, 0x6f,
	0x6f, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x62, 0x6f, 0x6f,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x70, 0x68,
	0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x62, 0x69, 0x6f, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x69, 0x6f, 0x73, 0x42, 0x6f,
	0x6f, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x10,
	0x0a, 0x0e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x2b, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a,
	0x0b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x18, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x22, 0xe4, 0x02, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x63, 0x61, 0x6c,
	0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x76, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x76, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x43, 0x72, 0x65, 0x64,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x6f, 0x70, 0x65, 0x6e,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x6f, 0x70, 0x65, 0x6e, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x6f, 0x5f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e, 0x6f,
	0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x3b,
	0x0a, 0x1a, 0x6e, 0x6f, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x17, 0x6e, 0x6f, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6e,
	0x6f, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x6f, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x22, 0x5a, 0x0a, 0x0e, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x65, 0x61,
	0x6e, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x22, 0xc6, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x6c,
	0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x30, 0x0a,
	0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xc0, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x10, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x72, 0x49, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x5f, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x22, 0x5f, 0x0a, 0x07,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x07, 0x76, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x76, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x03, 0x70, 0x63, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x70, 0x63, 0x64, 0x12, 0x1a, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x18, 0x63, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x82, 0x02,
	0x0a, 0x06, 0x56, 0x4d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x76, 0x34, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x30, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x70, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x22, 0x45, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x68, 0x6f, 0x73,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69,
	0x6f, 0x73, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x69, 0x6f, 0x73, 0x55, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22,
	0x90, 0x01, 0x0a, 0x13, 0x55, 0x6e, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x24, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x73, 0x78, 0x69, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x73, 0x78, 0x69, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x14, 0x55, 0x6e, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6e,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x4d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x30,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x4d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x03, 0x76, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x4d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x76, 0x6d, 0x73,
	0x22, 0x80, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x56, 0x4d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x02, 0x76, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x4d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x76,
	0x6d, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x4d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x47, 0x0a, 0x11,
	0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e,
	0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x73, 0x78,
	0x69, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x73,
	0x78, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x12, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e,
	0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xf8, 0x01, 0x0a, 0x17, 0x42, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6d,
	0x61, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x61, 0x61,
	0x73, 0x12, 0x2b, 0x0a, 0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x0b,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0x33, 0x0a, 0x10, 0x42,
	0x61, 0x73, 0x65, 0x42, 0x4d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x56, 0x0a, 0x15, 0x42, 0x4d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x16, 0x42, 0x4d, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73,
	0x22, 0x78, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x22, 0xae, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x4e, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x4d, 0x32, 0x50, 0x58, 0x45, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42,
	0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x6c, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x07, 0x6c, 0x61, 0x6e, 0x70,
	0x6c, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6c, 0x61, 0x6e,
	0x70, 0x6c, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x70, 0x6d,
	0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x70, 0x6d, 0x69, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x69, 0x70, 0x6d,
	0x69, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x53, 0x0a, 0x1d, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x4d, 0x32, 0x50, 0x58, 0x45,
	0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x0f, 0x0a, 0x0d, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x35, 0x0a, 0x0e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x14, 0x42, 0x6f, 0x6f,
	0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f,
	0x53, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x49, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x49, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x72, 0x63, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x41,
	0x72, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x61, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x75, 0x62, 0x61, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x42,
	0x6f, 0x6f, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x22,
	0x56, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x42, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x69, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x6f, 0x6f, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x16, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x62, 0x6f,
	0x6f, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x09, 0x69, 0x70, 0x6d, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x03, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x6c, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x07, 0x6c, 0x61, 0x6e, 0x70, 0x6c, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6c, 0x61, 0x6e, 0x70, 0x6c, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x70, 0x6d, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x70, 0x6d, 0x69, 0x12,
	0x14, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x69, 0x70, 0x6d, 0x69, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0xf4, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x42, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x61,
	0x73, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65,
	0x72, 0x61, 0x73, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x3a, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x74,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x5f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x35, 0x0a, 0x0e, 0x69, 0x70, 0x6d, 0x69, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x70, 0x6d, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x0d, 0x69, 0x70, 0x6d, 0x69, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x47,
	0x0a, 0x11, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x42, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x4d, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a,
	0x0f, 0x6f, 0x73, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x4d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0e, 0x69, 0x70, 0x6d, 0x69, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x70, 0x6d, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69,
	0x70, 0x6d, 0x69, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x45, 0x0a, 0x0f,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x4d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0e, 0x69, 0x70, 0x6d, 0x69, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x70, 0x6d, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69,
	0x70, 0x6d, 0x69, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x0e,
	0x53, 0x74, 0x6f, 0x70, 0x42, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x72, 0x0a, 0x10, 0x49, 0x73, 0x42, 0x4d, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x42, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x4d, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x74, 0x0a, 0x12, 0x49, 0x73, 0x42, 0x4d, 0x52, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x13,
	0x49, 0x73, 0x42, 0x4d, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75,
	0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x1a,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x49, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x50, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x12, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x75, 0x70, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x22, 0x5d, 0x0a, 0x13, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x53, 0x74, 0x65, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2a, 0x6a, 0x0a, 0x0b, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0f, 0x0a, 0x0b, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x4f, 0x4e, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x46, 0x46,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x4f,
	0x4e, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x63, 0x2a, 0x4b, 0x0a, 0x0a,
	0x42, 0x6f, 0x6f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x44,
	0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x53, 0x42, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x43, 0x44, 0x52, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x58, 0x45, 0x10, 0x03,
	0x12, 0x17, 0x0a, 0x13, 0x42, 0x4f, 0x4f, 0x54, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x63, 0x32, 0xd9, 0x04, 0x0a, 0x07, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x0f, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x70, 0x77,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x69,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12,
	0x18, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x5c, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x13, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x70, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x61, 0x67, 0x73, 0x12, 0x71, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x41, 0x6e, 0x64, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f,
	0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x0b, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x75, 0x70, 0x53, 0x74, 0x65, 0x70, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70,
	0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x5f, 0x73, 0x74,
	0x65, 0x70, 0x3a, 0x01, 0x2a, 0x32, 0x9b, 0x04, 0x0a, 0x07, 0x56, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x4e, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x4d, 0x73, 0x12, 0x13, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x4d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x4d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12,
	0x10, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x76, 0x6d,
	0x73, 0x12, 0x46, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x56, 0x4d, 0x12, 0x11, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x70, 0x77, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x6d, 0x12, 0x59, 0x0a, 0x09, 0x52, 0x65, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x56, 0x4d, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x56, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x4d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f,
	0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x76,
	0x6d, 0x3a, 0x01, 0x2a, 0x12, 0x5d, 0x0a, 0x0a, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x70,
	0x77, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x0c, 0x55, 0x6e, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x6e, 0x43, 0x6f, 0x72, 0x64,
	0x6f, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x6e, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x22, 0x16, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x5f, 0x63, 0x6f, 0x72,
	0x64, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x56, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12,
	0x12, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x68, 0x6f,
	0x73, 0x74, 0x73, 0x32, 0xf6, 0x06, 0x0a, 0x0a, 0x42, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x69, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x4d, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x4d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6d, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x6f, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x76,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x4d, 0x32, 0x50, 0x58, 0x45, 0x42, 0x6f, 0x6f, 0x74,
	0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x4d, 0x32, 0x50, 0x58, 0x45, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x4d, 0x32, 0x50, 0x58, 0x45, 0x42, 0x6f, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22,
	0x1f, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x6d, 0x32, 0x70, 0x78, 0x65, 0x62, 0x6f, 0x6f, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x4b, 0x0a, 0x06, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x12, 0x12, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10,
	0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x68, 0x6f, 0x5f, 0x61, 0x6d, 0x5f, 0x69,
	0x12, 0x6b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6f,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x62, 0x0a,
	0x0d, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x42, 0x4d, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x15,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x42, 0x4d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x42, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x62, 0x6d, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0x69, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x22, 0x16, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x3a, 0x01, 0x2a, 0x32, 0x95, 0x01, 0x0a,
	0x0e, 0x56, 0x61, 0x69, 0x6c, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12,
	0x82, 0x01, 0x0a, 0x13, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x70, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x49,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x70, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x69,
	0x70, 0x3a, 0x01, 0x2a, 0x42, 0x24, 0x0a, 0x0f, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x66, 0x39, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x03, 0x70, 0x66, 0x39, 0x50, 0x01, 0x5a, 0x0a,
	0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_api_proto_goTypes = []interface{}{
	(PowerStatus)(0),                      // 0: api.PowerStatus
	(BootDevice)(0),                       // 1: api.BootDevice
	(*MachineInfo)(nil),                   // 2: api.MachineInfo
	(*VersionRequest)(nil),                // 3: api.VersionRequest
	(*VersionResponse)(nil),               // 4: api.VersionResponse
	(*ReleaseInfo)(nil),                   // 5: api.ReleaseInfo
	(*AvailableUpdatesResponse)(nil),      // 6: api.AvailableUpdatesResponse
	(*ValidationResult)(nil),              // 7: api.ValidationResult
	(*UpgradeRequest)(nil),                // 8: api.UpgradeRequest
	(*UpgradeResponse)(nil),               // 9: api.UpgradeResponse
	(*UpgradeProgressResponse)(nil),       // 10: api.UpgradeProgressResponse
	(*TargetAccessInfo)(nil),              // 11: api.TargetAccessInfo
	(*Targets)(nil),                       // 12: api.Targets
	(*VMInfo)(nil),                        // 13: api.VMInfo
	(*ListHostsRequest)(nil),              // 14: api.ListHostsRequest
	(*ListHostsResponse)(nil),             // 15: api.ListHostsResponse
	(*ListHostsResponseItem)(nil),         // 16: api.ListHostsResponseItem
	(*UnCordonHostRequest)(nil),           // 17: api.UnCordonHostRequest
	(*UnCordonHostResponse)(nil),          // 18: api.UnCordonHostResponse
	(*ListVMsRequest)(nil),                // 19: api.ListVMsRequest
	(*ListVMsResponse)(nil),               // 20: api.ListVMsResponse
	(*GetVMRequest)(nil),                  // 21: api.GetVMRequest
	(*GetVMResponse)(nil),                 // 22: api.GetVMResponse
	(*ReclaimVMRequest)(nil),              // 23: api.ReclaimVMRequest
	(*ReclaimVMResponse)(nil),             // 24: api.ReclaimVMResponse
	(*CordonHostRequest)(nil),             // 25: api.CordonHostRequest
	(*CordonHostResponse)(nil),            // 26: api.CordonHostResponse
	(*BMProvisionerAccessInfo)(nil),       // 27: api.BMProvisionerAccessInfo
	(*BaseBMGetRequest)(nil),              // 28: api.BaseBMGetRequest
	(*BMListMachinesRequest)(nil),         // 29: api.BMListMachinesRequest
	(*BMListMachinesResponse)(nil),        // 30: api.BMListMachinesResponse
	(*GetResourceInfoRequest)(nil),        // 31: api.GetResourceInfoRequest
	(*GetResourceInfoResponse)(nil),       // 32: api.GetResourceInfoResponse
	(*SetResourcePowerRequest)(nil),       // 33: api.SetResourcePowerRequest
	(*SetResourcePowerResponse)(nil),      // 34: api.SetResourcePowerResponse
	(*SetResourceBM2PXEBootRequest)(nil),  // 35: api.SetResourceBM2PXEBootRequest
	(*SetResourceBM2PXEBootResponse)(nil), // 36: api.SetResourceBM2PXEBootResponse
	(*WhoAmIRequest)(nil),                 // 37: api.WhoAmIRequest
	(*WhoAmIResponse)(nil),                // 38: api.WhoAmIResponse
	(*BootsourceSelections)(nil),          // 39: api.BootsourceSelections
	(*ListBootSourceRequest)(nil),         // 40: api.ListBootSourceRequest
	(*ListBootSourceResponse)(nil),        // 41: api.ListBootSourceResponse
	(*IpmiType)(nil),                      // 42: api.ipmi_type
	(*ReclaimBMRequest)(nil),              // 43: api.ReclaimBMRequest
	(*ReclaimBMResponse)(nil),             // 44: api.ReclaimBMResponse
	(*DeployMachineRequest)(nil),          // 45: api.DeployMachineRequest
	(*DeployMachineResponse)(nil),         // 46: api.DeployMachineResponse
	(*StartBMRequest)(nil),                // 47: api.StartBMRequest
	(*StartBMResponse)(nil),               // 48: api.StartBMResponse
	(*StopBMRequest)(nil),                 // 49: api.StopBMRequest
	(*StopBMResponse)(nil),                // 50: api.StopBMResponse
	(*IsBMReadyRequest)(nil),              // 51: api.IsBMReadyRequest
	(*IsBMReadyResponse)(nil),             // 52: api.IsBMReadyResponse
	(*IsBMRunningRequest)(nil),            // 53: api.IsBMRunningRequest
	(*IsBMRunningResponse)(nil),           // 54: api.IsBMRunningResponse
	(*OpenstackAccessInfo)(nil),           // 55: api.OpenstackAccessInfo
	(*ValidateOpenstackIpRequest)(nil),    // 56: api.ValidateOpenstackIpRequest
	(*ValidateOpenstackIpResponse)(nil),   // 57: api.ValidateOpenstackIpResponse
	(*CleanupStepRequest)(nil),            // 58: api.CleanupStepRequest
	(*CleanupStepResponse)(nil),           // 59: api.CleanupStepResponse
}
var file_api_proto_depIdxs = []int32{
	5,  // 0: api.AvailableUpdatesResponse.updates:type_name -> api.ReleaseInfo
	7,  // 1: api.UpgradeResponse.checks:type_name -> api.ValidationResult
	0,  // 2: api.VMInfo.power_status:type_name -> api.PowerStatus
	1,  // 3: api.VMInfo.boot_device:type_name -> api.BootDevice
	11, // 4: api.ListHostsRequest.access_info:type_name -> api.TargetAccessInfo
	12, // 5: api.ListHostsRequest.target:type_name -> api.Targets
	16, // 6: api.ListHostsResponse.hosts:type_name -> api.ListHostsResponseItem
	11, // 7: api.UnCordonHostRequest.access_info:type_name -> api.TargetAccessInfo
	12, // 8: api.UnCordonHostRequest.target:type_name -> api.Targets
	11, // 9: api.ListVMsRequest.access_info:type_name -> api.TargetAccessInfo
	12, // 10: api.ListVMsRequest.target:type_name -> api.Targets
	13, // 11: api.ListVMsResponse.vms:type_name -> api.VMInfo
	11, // 12: api.GetVMRequest.access_info:type_name -> api.TargetAccessInfo
	12, // 13: api.GetVMRequest.target:type_name -> api.Targets
	13, // 14: api.GetVMResponse.vm:type_name -> api.VMInfo
	11, // 15: api.ReclaimVMRequest.access_info:type_name -> api.TargetAccessInfo
	12, // 16: api.ReclaimVMRequest.target:type_name -> api.Targets
	11, // 17: api.CordonHostRequest.access_info:type_name -> api.TargetAccessInfo
	12, // 18: api.CordonHostRequest.target:type_name -> api.Targets
	27, // 19: api.BMListMachinesRequest.access_info:type_name -> api.BMProvisionerAccessInfo
	2,  // 20: api.BMListMachinesResponse.machines:type_name -> api.MachineInfo
	27, // 21: api.GetResourceInfoRequest.access_info:type_name -> api.BMProvisionerAccessInfo
	2,  // 22: api.GetResourceInfoResponse.machine:type_name -> api.MachineInfo
	27, // 23: api.SetResourcePowerRequest.access_info:type_name -> api.BMProvisionerAccessInfo
	0,  // 24: api.SetResourcePowerRequest.power_status:type_name -> api.PowerStatus
	27, // 25: api.SetResourceBM2PXEBootRequest.access_info:type_name -> api.BMProvisionerAccessInfo
	27, // 26: api.ListBootSourceRequest.access_info:type_name -> api.BMProvisionerAccessInfo
	39, // 27: api.ListBootSourceResponse.boot_source_selections:type_name -> api.BootsourceSelections
	27, // 28: api.ReclaimBMRequest.access_info:type_name -> api.BMProvisionerAccessInfo
	39, // 29: api.ReclaimBMRequest.boot_source:type_name -> api.BootsourceSelections
	42, // 30: api.ReclaimBMRequest.ipmi_interface:type_name -> api.ipmi_type
	27, // 31: api.DeployMachineRequest.access_info:type_name -> api.BMProvisionerAccessInfo
	27, // 32: api.StartBMRequest.access_info:type_name -> api.BMProvisionerAccessInfo
	42, // 33: api.StartBMRequest.ipmi_interface:type_name -> api.ipmi_type
	27, // 34: api.StopBMRequest.access_info:type_name -> api.BMProvisionerAccessInfo
	42, // 35: api.StopBMRequest.ipmi_interface:type_name -> api.ipmi_type
	27, // 36: api.IsBMReadyRequest.access_info:type_name -> api.BMProvisionerAccessInfo
	27, // 37: api.IsBMRunningRequest.access_info:type_name -> api.BMProvisionerAccessInfo
	55, // 38: api.ValidateOpenstackIpRequest.access_info:type_name -> api.OpenstackAccessInfo
	3,  // 39: api.Version.Version:input_type -> api.VersionRequest
	8,  // 40: api.Version.InitiateUpgrade:input_type -> api.UpgradeRequest
	3,  // 41: api.Version.GetUpgradeProgress:input_type -> api.VersionRequest
	3,  // 42: api.Version.GetAvailableTags:input_type -> api.VersionRequest
	8,  // 43: api.Version.ConfirmCleanupAndUpgrade:input_type -> api.UpgradeRequest
	58, // 44: api.Version.CleanupStep:input_type -> api.CleanupStepRequest
	19, // 45: api.VCenter.ListVMs:input_type -> api.ListVMsRequest
	21, // 46: api.VCenter.GetVM:input_type -> api.GetVMRequest
	23, // 47: api.VCenter.ReclaimVM:input_type -> api.ReclaimVMRequest
	25, // 48: api.VCenter.CordonHost:input_type -> api.CordonHostRequest
	17, // 49: api.VCenter.UnCordonHost:input_type -> api.UnCordonHostRequest
	14, // 50: api.VCenter.ListHosts:input_type -> api.ListHostsRequest
	29, // 51: api.BMProvider.ListMachines:input_type -> api.BMListMachinesRequest
	31, // 52: api.BMProvider.GetResourceInfo:input_type -> api.GetResourceInfoRequest
	33, // 53: api.BMProvider.SetResourcePower:input_type -> api.SetResourcePowerRequest
	35, // 54: api.BMProvider.SetResourceBM2PXEBoot:input_type -> api.SetResourceBM2PXEBootRequest
	37, // 55: api.BMProvider.WhoAmI:input_type -> api.WhoAmIRequest
	40, // 56: api.BMProvider.ListBootSource:input_type -> api.ListBootSourceRequest
	43, // 57: api.BMProvider.ReclaimBMHost:input_type -> api.ReclaimBMRequest
	45, // 58: api.BMProvider.DeployMachine:input_type -> api.DeployMachineRequest
	56, // 59: api.VailbreakProxy.ValidateOpenstackIp:input_type -> api.ValidateOpenstackIpRequest
	4,  // 60: api.Version.Version:output_type -> api.VersionResponse
	9,  // 61: api.Version.InitiateUpgrade:output_type -> api.UpgradeResponse
	10, // 62: api.Version.GetUpgradeProgress:output_type -> api.UpgradeProgressResponse
	6,  // 63: api.Version.GetAvailableTags:output_type -> api.AvailableUpdatesResponse
	9,  // 64: api.Version.ConfirmCleanupAndUpgrade:output_type -> api.UpgradeResponse
	59, // 65: api.Version.CleanupStep:output_type -> api.CleanupStepResponse
	20, // 66: api.VCenter.ListVMs:output_type -> api.ListVMsResponse
	22, // 67: api.VCenter.GetVM:output_type -> api.GetVMResponse
	24, // 68: api.VCenter.ReclaimVM:output_type -> api.ReclaimVMResponse
	26, // 69: api.VCenter.CordonHost:output_type -> api.CordonHostResponse
	18, // 70: api.VCenter.UnCordonHost:output_type -> api.UnCordonHostResponse
	15, // 71: api.VCenter.ListHosts:output_type -> api.ListHostsResponse
	30, // 72: api.BMProvider.ListMachines:output_type -> api.BMListMachinesResponse
	32, // 73: api.BMProvider.GetResourceInfo:output_type -> api.GetResourceInfoResponse
	34, // 74: api.BMProvider.SetResourcePower:output_type -> api.SetResourcePowerResponse
	36, // 75: api.BMProvider.SetResourceBM2PXEBoot:output_type -> api.SetResourceBM2PXEBootResponse
	38, // 76: api.BMProvider.WhoAmI:output_type -> api.WhoAmIResponse
	41, // 77: api.BMProvider.ListBootSource:output_type -> api.ListBootSourceResponse
	44, // 78: api.BMProvider.ReclaimBMHost:output_type -> api.ReclaimBMResponse
	46, // 79: api.BMProvider.DeployMachine:output_type -> api.DeployMachineResponse
	57, // 80: api.VailbreakProxy.ValidateOpenstackIp:output_type -> api.ValidateOpenstackIpResponse
	60, // [60:81] is the sub-list for method output_type
	39, // [39:60] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableUpdatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetAccessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Targets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VMInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHostsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHostsResponseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnCordonHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnCordonHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVMsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVMsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReclaimVMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReclaimVMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CordonHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CordonHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BMProvisionerAccessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseBMGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BMListMachinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BMListMachinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetResourcePowerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetResourcePowerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetResourceBM2PXEBootRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetResourceBM2PXEBootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoAmIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoAmIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootsourceSelections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBootSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBootSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpmiType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReclaimBMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReclaimBMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployMachineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBMReadyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBMReadyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBMRunningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBMRunningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenstackAccessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateOpenstackIpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateOpenstackIpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanupStepRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanupStepResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*Targets_Vcenter)(nil),
		(*Targets_Pcd)(nil),
		(*Targets_Unknown)(nil),
	}
	file_api_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*BMProvisionerAccessInfo_Maas)(nil),
		(*BMProvisionerAccessInfo_UnknownProvider)(nil),
	}
	file_api_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*SetResourceBM2PXEBootRequest_Lan)(nil),
		(*SetResourceBM2PXEBootRequest_Lanplus)(nil),
		(*SetResourceBM2PXEBootRequest_OpenIpmi)(nil),
		(*SetResourceBM2PXEBootRequest_Tool)(nil),
	}
	file_api_proto_msgTypes[40].OneofWrappers = []interface{}{
		(*IpmiType_Lan)(nil),
		(*IpmiType_Lanplus)(nil),
		(*IpmiType_OpenIpmi)(nil),
		(*IpmiType_Tool)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
